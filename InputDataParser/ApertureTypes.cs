// 
// This source code was auto-generated by xsd, Version=4.0.30319.33440.
// 
namespace ApertureTypes
{
    using System.Xml.Serialization;

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("Building", Namespace = "", IsNullable = false)]
    public partial class TBuilding : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string classNameField;

        private int idField;

        private int typeField;

        private string nameField;

        private TFloor[] floorListField;

        /// <remarks/>
        public string ClassName
        {
            get
            {
                return this.classNameField;
            }
            set
            {
                this.classNameField = value;
                this.RaisePropertyChanged("ClassName");
            }
        }

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }

        /// <remarks/>
        public int Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Floor")]
        public TFloor[] FloorList
        {
            get
            {
                return this.floorListField;
            }
            set
            {
                this.floorListField = value;
                this.RaisePropertyChanged("FloorList");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TFloor : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string classNameField;

        private int idField;

        private int typeField;

        private string nameField;

        private int numberField;

        private TAperture[] apertureListField;

        /// <remarks/>
        public string ClassName
        {
            get
            {
                return this.classNameField;
            }
            set
            {
                this.classNameField = value;
                this.RaisePropertyChanged("ClassName");
            }
        }

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }

        /// <remarks/>
        public int Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }

        /// <remarks/>
        public int Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
                this.RaisePropertyChanged("Number");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Aperture")]
        public TAperture[] ApertureList
        {
            get
            {
                return this.apertureListField;
            }
            set
            {
                this.apertureListField = value;
                this.RaisePropertyChanged("ApertureList");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TAperture : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string classNameField;

        private int idField;

        private float x1Field;

        private bool x1FieldSpecified;

        private float y1Field;

        private bool y1FieldSpecified;

        private float z1Field;

        private bool z1FieldSpecified;

        private float x2Field;

        private bool x2FieldSpecified;

        private float y2Field;

        private bool y2FieldSpecified;

        private float z2Field;

        private bool z2FieldSpecified;

        private int lockField;

        private bool lockFieldSpecified;

        private int closerField;

        private bool closerFieldSpecified;

        private int antiFireField;

        private bool antiFireFieldSpecified;

        private float angleField;

        private bool angleFieldSpecified;

        /// <remarks/>
        public string ClassName
        {
            get
            {
                return this.classNameField;
            }
            set
            {
                this.classNameField = value;
                this.RaisePropertyChanged("ClassName");
            }
        }

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }

        /// <remarks/>
        public float x1
        {
            get
            {
                return this.x1Field;
            }
            set
            {
                this.x1Field = value;
                this.RaisePropertyChanged("x1");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool x1Specified
        {
            get
            {
                return this.x1FieldSpecified;
            }
            set
            {
                this.x1FieldSpecified = value;
                this.RaisePropertyChanged("x1Specified");
            }
        }

        /// <remarks/>
        public float y1
        {
            get
            {
                return this.y1Field;
            }
            set
            {
                this.y1Field = value;
                this.RaisePropertyChanged("y1");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool y1Specified
        {
            get
            {
                return this.y1FieldSpecified;
            }
            set
            {
                this.y1FieldSpecified = value;
                this.RaisePropertyChanged("y1Specified");
            }
        }

        /// <remarks/>
        public float z1
        {
            get
            {
                return this.z1Field;
            }
            set
            {
                this.z1Field = value;
                this.RaisePropertyChanged("z1");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool z1Specified
        {
            get
            {
                return this.z1FieldSpecified;
            }
            set
            {
                this.z1FieldSpecified = value;
                this.RaisePropertyChanged("z1Specified");
            }
        }

        /// <remarks/>
        public float x2
        {
            get
            {
                return this.x2Field;
            }
            set
            {
                this.x2Field = value;
                this.RaisePropertyChanged("x2");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool x2Specified
        {
            get
            {
                return this.x2FieldSpecified;
            }
            set
            {
                this.x2FieldSpecified = value;
                this.RaisePropertyChanged("x2Specified");
            }
        }

        /// <remarks/>
        public float y2
        {
            get
            {
                return this.y2Field;
            }
            set
            {
                this.y2Field = value;
                this.RaisePropertyChanged("y2");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool y2Specified
        {
            get
            {
                return this.y2FieldSpecified;
            }
            set
            {
                this.y2FieldSpecified = value;
                this.RaisePropertyChanged("y2Specified");
            }
        }

        /// <remarks/>
        public float z2
        {
            get
            {
                return this.z2Field;
            }
            set
            {
                this.z2Field = value;
                this.RaisePropertyChanged("z2");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool z2Specified
        {
            get
            {
                return this.z2FieldSpecified;
            }
            set
            {
                this.z2FieldSpecified = value;
                this.RaisePropertyChanged("z2Specified");
            }
        }

        /// <remarks/>
        public int Lock
        {
            get
            {
                return this.lockField;
            }
            set
            {
                this.lockField = value;
                this.RaisePropertyChanged("Lock");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockSpecified
        {
            get
            {
                return this.lockFieldSpecified;
            }
            set
            {
                this.lockFieldSpecified = value;
                this.RaisePropertyChanged("LockSpecified");
            }
        }

        /// <remarks/>
        public int Closer
        {
            get
            {
                return this.closerField;
            }
            set
            {
                this.closerField = value;
                this.RaisePropertyChanged("Closer");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CloserSpecified
        {
            get
            {
                return this.closerFieldSpecified;
            }
            set
            {
                this.closerFieldSpecified = value;
                this.RaisePropertyChanged("CloserSpecified");
            }
        }

        /// <remarks/>
        public int AntiFire
        {
            get
            {
                return this.antiFireField;
            }
            set
            {
                this.antiFireField = value;
                this.RaisePropertyChanged("AntiFire");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AntiFireSpecified
        {
            get
            {
                return this.antiFireFieldSpecified;
            }
            set
            {
                this.antiFireFieldSpecified = value;
                this.RaisePropertyChanged("AntiFireSpecified");
            }
        }

        /// <remarks/>
        public float Angle
        {
            get
            {
                return this.angleField;
            }
            set
            {
                this.angleField = value;
                this.RaisePropertyChanged("Angle");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AngleSpecified
        {
            get
            {
                return this.angleFieldSpecified;
            }
            set
            {
                this.angleFieldSpecified = value;
                this.RaisePropertyChanged("AngleSpecified");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
